const request = require("request");
const env = require("../env/ar_env")
module.exports = {

    env : '',

    setEnv :(pEnv)=>{this.env =pEnv},

    getEnv :()=>{return this.env},

    register :  (requestPayload) => {

      return new Promise(function(resolve,reject){

        uri = ""
        method = ""
        switch (requestPayload.action) {
            case 'register':
                uri = "/registerApplicability"
                method = "POST"
                break;
            case 'deregister':
                uri = "/deRegisterApplicability";
                method = "DELETE"
                break;
            case 'resolve':
                uri = "/resolve";
                method = "POST"
                break;
            case 'update':
                uri = "/updateApplicability";
                method = "PATCH"
                break;
            default:
                uri = "/resolve";
                method = "POST"
        }

        url = env(this.env) +"applicability" +uri
        console.log("constructed env :: ",url)
        request(
          {
            rejectUnauthorized: false,
            method: method,
            uri: url,
            body: JSON.stringify(requestPayload),
            headers: {
              "content-type": 'application/json'
            }
          },
          (err, apiResp, body) => {
            if (err) {
              return reject(err);

            }
            if (apiResp.statusCode >= 200 && apiResp.statusCode < 400) return resolve(body);
            return reject(body);
          }
        );

      });

    }

}
