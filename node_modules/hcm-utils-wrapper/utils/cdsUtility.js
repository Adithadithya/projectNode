const request = require("request");
const env = require("../env/cds_env")
var fs = require("fs")

module.exports = function(){
    this.env = "DEV";
    this.setEnv = function(pENV){ this.env = pENV};
    this.getEnv = function(){return this.env};

    this.test = function(){
        console.log(this.getEnv())
    };

    this.upload = (requestPayload)=>{
        self = this;
        return new Promise(function(resolve,reject){
      
            if(!(requestPayload && 
            requestPayload.appName && 
            requestPayload.folder &&
            requestPayload.clientId && 
            requestPayload.empId && 
            requestPayload.filePath)){
            return reject({"status" : 500, "message" : "File path is not provided"})
        }

        uri = ""
        method = ""
        switch (requestPayload.action) {
            case 'upload':
                uri = "/upload/"+requestPayload.appName+"/"+requestPayload.folder+"/"+requestPayload.clientId+"/"+requestPayload.empId+"/";
                method = "POST"
                break;
            default:
                uri = "/upload/"+requestPayload.appName+"/"+requestPayload.folder+"/"+requestPayload.clientId+"/"+requestPayload.empId+"/";
                method = "POST"
        }

        url = env(self.getEnv())  +uri
        console.log("constructed env :: ",url)

        var req = request.post(url, function (err, resp, body) {
         if (err) {
            reject(err)
         } else {
             resolve(body)
         }
       });
       var form = req.form();
    
       form.append("content", fs.createReadStream(requestPayload.filePath))
        });

    };
}

